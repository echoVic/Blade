/**
 * Ink Spinner ÁªÑ‰ª∂ - Âä†ËΩΩÂä®Áîª
 */
import React, { useState, useEffect } from 'react';
import { Text } from './Text.js';

interface SpinnerProps {
  type?: 'dots' | 'dots2' | 'dots3' | 'dots4' | 'dots5' | 'dots6' | 'dots7' | 'dots8' | 'dots9' | 'dots10' | 'dots11' | 'dots12' | 'line' | 'line2' | 'pipe' | 'simpleDots' | 'simpleDotsScrolling' | 'star' | 'star2' | 'flip' | 'hamburger' | 'growVertical' | 'growHorizontal' | 'balloon' | 'balloon2' | 'noise' | 'bounce' | 'boxBounce' | 'boxBounce2' | 'triangle' | 'arc' | 'circle' | 'squareCorners' | 'circleQuarters' | 'circleHalves' | 'squish' | 'toggle' | 'toggle2' | 'pong' | 'run' | 'pingPong' | 'shake' | 'bar' | 'bar2' | 'bar3' | 'bar4' | 'bar5' | 'bar6' | 'moon' | 'dotsBounce' | 'dotsFade' | 'clock';
  color?: string;
  label?: string;
  style?: React.CSSProperties;
}

export const Spinner: React.FC<SpinnerProps> = ({
  type = 'dots',
  color = 'green',
  label = '',
  style,
}) => {
  const [frame, setFrame] = useState(0);

  // ‰∏çÂêåÁ±ªÂûãÁöÑÂä®ÁîªÂ∏ß
  const spinnerFrames: Record<string, string[]> = {
    dots: ['‚†ã', '‚†ô', '‚†π', '‚†∏', '‚†º', '‚†¥', '‚†¶', '‚†ß', '‚†á', '‚†è'],
    dots2: ['‚£æ', '‚£Ω', '‚£ª', '‚¢ø', '‚°ø', '‚£ü', '‚£Ø', '‚£∑'],
    dots3: ['‚†ã', '‚†ô', '‚†ö', '‚†û', '‚†ñ', '‚†¶', '‚†¥', '‚†≤', '‚†≥', '‚†ì'],
    line: ['-', '\\', '|', '/'],
    pipe: ['‚î§', '‚îò', '‚î¥', '‚îî', '‚îú', '‚îå', '‚î¨', '‚îê'],
    star: ['‚ú∂', '‚ú∏', '‚úπ', '‚ú∫', '‚úπ', '‚ú∑'],
    flip: ['_', '_', '_', '-', '`', '`', '`', '-', '_', '_', '_',],
    hamburger: ['‚ò±', '‚ò≤', '‚ò¥'],
    growVertical: ['‚ñÅ', '‚ñÉ', '‚ñÑ', '‚ñÖ', '‚ñÜ', '‚ñá', '‚ñÜ', '‚ñÖ', '‚ñÑ', '‚ñÉ'],
    growHorizontal: ['‚ñè', '‚ñé', '‚ñç', '‚ñå', '‚ñã', '‚ñä', '‚ñâ', '‚ñä', '‚ñã', '‚ñå', '‚ñç', '‚ñé'],
    balloon: [' ', '‚óã', '‚óî', '‚óï', '‚óè'],
    balloon2: [' ', '.', 'o', 'O', '@', '*', ' '],
    noise: ['‚ñì', '‚ñí', '‚ñë'],
    bounce: ['‚†Å', '‚†Ç', '‚†Ñ', '‚°Ä', '‚¢Ä', '‚††', '‚†ê', '‚†à'],
    triangle: ['‚ó¢', '‚ó£', '‚ó§', '‚ó•'],
    arc: ['‚óú', '‚ó†', '‚óù', '‚óû', '‚ó°', '‚óü'],
    circle: ['‚ó°', '‚äô', '‚ó†'],
    squareCorners: ['‚ó∞', '‚ó≥', '‚ó≤', '‚ó±'],
    circleQuarters: ['‚ó¥', '‚ó∑', '‚ó∂', '‚óµ'],
    circleHalves: ['‚óê', '‚óì', '‚óë', '‚óí'],
    squish: ['‚ï´', '‚ï™'],
    toggle: ['‚ä∂', '‚ä∑'],
    toggle2: ['‚ñ´', '‚ñ™'],
    pong: ['‚ñê', '‚ñå'],
    run: ['üö∂ ', 'üèÉ '],
    shake: ['‚†ê', '‚†î', '‚†í', '‚†Ç', '‚†ê', '‚†í', '‚†î', '‚†Ç'],
    bar: ['‚ñâ', '‚ñä', '‚ñã', '‚ñå', '‚ñç', '‚ñé', '‚ñè', '‚ñé', '‚ñç', '‚ñå', '‚ñã', '‚ñä'],
    moon: ['üåë ', 'üåí ', 'üåì ', 'üåî ', 'üåï ', 'üåñ ', 'üåó ', 'üåò '],
    clock: ['üïê ', 'üïë ', 'üïí ', 'üïì ', 'üïî ', 'üïï ', 'üïñ ', 'üïó ', 'üïò ', 'üïô ', 'üïö ', 'üïõ '],
  };

  // Â¶ÇÊûúÊåáÂÆöÁöÑÁ±ªÂûã‰∏çÂ≠òÂú®Ôºå‰ΩøÁî®ÈªòËÆ§ÁöÑ dots
  const frames = spinnerFrames[type] || spinnerFrames.dots;

  // Âä®ÁîªÊïàÊûú
  useEffect(() => {
    const interval = setInterval(() => {
      setFrame(prev => (prev + 1) % frames.length);
    }, 80);

    return () => clearInterval(interval);
  }, [frames.length]);

  return (
    <Text color={color} style={style}>
      {frames[frame]} {label}
    </Text>
  );
};